// Copyright 2016 Tom Thorogood. All rights reserved.
// Use of this source code is governed by a
// Modified BSD License license that can be found in
// the LICENSE file.

// Code generated by asset-hashes.
// sources:
// assets/robots.txt
// assets/style.css
// DO NOT EDIT!

package main

import (
	"fmt"
	"os"
)

const _assetHashLength = 64

var _assetHashes = map[string]string{
	"assets/robots.txt": "331ea9090db0c9f6f597bd9840fd5b171830f6e0b3ba1cb24dfa91f0c95aedc1",
	"assets/style.css":  "f3ebebab91d4c78b1c8cc94f31d5f0fddba6b6859e9bff007c94338ca2efaa0d",
}

func AssetHash(name string) (string, error) {
	if hash, ok := _assetHashes[name]; ok {
		return hash, nil
	}

	return "", fmt.Errorf("Asset %s not found", name)
}

func AssetHashName(name string) (string, error) {
	hash, err := AssetHash(name)
	if err != nil {
		return "", err
	}

	for i := len(name) - 1; i >= 0 && !os.IsPathSeparator(name[i]); i-- {
		if name[i] == '.' {
			return name[:i] + "-" + hash + name[i:], nil
		}
	}

	return name + "-" + hash, nil
}

func AssetNameStripHash(name string) (string, error) {
	for i := len(name) - 1; i >= 0 && !os.IsPathSeparator(name[i]); i-- {
		if name[i] != '.' {
			continue
		}

		if i-_assetHashLength-1 < 0 || name[i-_assetHashLength-1] != '-' {
			return "", fmt.Errorf("Asset %s not found", name)
		}

		hash, err := AssetHash(name[:i-_assetHashLength-1] + name[i:])
		if err != nil {
			return "", err
		}

		if name[i-_assetHashLength:i] != hash {
			return "", fmt.Errorf("Asset %s not found", name)
		}

		return name[:i-_assetHashLength-1] + name[i:], nil
	}

	i := len(name)

	if i-_assetHashLength-1 < 0 || name[i-_assetHashLength-1] != '-' {
		return "", fmt.Errorf("Asset %s not found", name)
	}

	hash, err := AssetHash(name[:i-_assetHashLength-1] + name[i:])
	if err != nil {
		return "", err
	}

	if name[i-_assetHashLength:i] != hash {
		return "", fmt.Errorf("Asset %s not found", name)
	}

	return name[:i-_assetHashLength-1] + name[i:], nil
}

func AssetFromNameHash(name string) ([]byte, error) {
	name, err := AssetNameStripHash(name)
	if err != nil {
		return nil, err
	}

	return Asset(name)
}

func AssetInfoFromNameHash(name string) (os.FileInfo, error) {
	name, err := AssetNameStripHash(name)
	if err != nil {
		return nil, err
	}

	return AssetInfo(name)
}
